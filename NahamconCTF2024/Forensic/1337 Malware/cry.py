import socket
import base64
import os
from random import randbytes
from pwn import xor

# DON'T FORGET TO CHANGE THIS TO THE REAL KEY!!!!
key = randbytes(32)
print("[+] KEY: ",key)
keyimitasi = b'\x82\xc2SP\x8b\xd5LG\xa7\xe5m\xec\xd8v\xb5\xd6\xa4\'\xc6E\t\x0br\xe1\xb9q3"\xfe\xe1YY'


def encrypt(filename):
    f = open(filename, 'rb')
    data = f.read()
    f.close()
   
    encrypted = xor(data, keyimitasi)
    return encrypted

def den(filename,ct):
    f = open(filename, 'rb')
    data = f.read()
    f.close()
   
    encrypted = xor(data, ct)
    with open('text.zip', 'wb') as f:
        f.write(encrypted)
    return encrypted

#------------------------------------
#id_rsa.pub
raw = "f1b13b7df9a62d67e6a42cad9a45fbacc564f73c6a3937a0f8307266bfb0181bc3831212ec84080ff2a93896e8448686fd55902a43413e918c29714bbcb03513d7a36a3adfbf0470f1bf09b4a23cd790f64ca206503825b0cb1f566ea4a8310ad6f70063a49d220295ae55d9a011c6e5e26483306e4013d9de3b5a50b6ce763ab3911217a48338159fd219c39502e6e5f36d820b267918898e267b1ba9d0180ed0811a66d9e667129f895aa09b46ec97e351f00e6f4159cac9147b6e96b22e61c1b50738b2e72203ccaa42889e27deb7fd558f2273471a8add135e4989a26f61b394351abeb07825cdac15afad12d7a0e342f1025a660bb4fb140b7a8dd53372e78d2a23cfbc0902f3a75dc7aa038da2ce578f214f6615a5ff5e78418db8761cfa801468c1901515cf925ab4ed1df1999415813743200ba0e123564495842972d7923761bc977b0d8cbd0fbaa143fdbe966afe0f484605d5eb4974549fa81e72b4f56b1cd2e0077ff1ac25a7e906db99f141ae72514f1cb8de1c417bb3d30f21c1f03913fae7050df4d45e82bf0cd687e34eb22f5b6842b98909416fcab92830da89640ae9e1392bdfa00ab4ae14eda18b6d93706c6a43bbe316674b8bd91603a9851121e397060895b207a3b710f1bedc4da7714b672ab1810047518a951d03f3ad1404f1e53b1e95952eb8f737cf9ad216872f7d7818a7e8055978adb36c1fd4b61a35c9e17c3fe5d23b81ba12fa9af74285716b685db68b01704e8eaa1d12c9bb1a7be186017a87810c9abd0ff5a3c652a8317c261684ca1a474d8eeb"

ct = encrypt("id_rsa.txt")
ct1 = bytes.fromhex(raw)

keysin = den("id_rsa.txt",ct1)
keysin1 = keysin[:32]

data_awal = xor(keysin1,ct)



print("CT: ",ct)
print("\n\n\n\n")
print("KEY IMITASI :",keysin[:32])

print("\n\n\n\n")
print(data_awal)




#------------------------------------------
#----PAKAI INI YANG DIATAS CUMA COBA-COBA
plain = "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC"

#key ini disimpan dikey imitasi
keyre = xor(plain,ct1)
fix = keyre[:32]
print("INI FIX KEY:",keyre,"\n")
print(fix)
data_fix = xor(keyimitasi,ct1)
print(data_fix)

def den1(filename, ke):
    with open(filename, 'rb') as f:
        data = f.read()
	
    #r1 = data.hex()
    #print(r1)
    #r2 = bytes.fromhex(data)
    encrypted = xor(data, ke)  # Anda harus menentukan implementasi fungsi xor sendiri
    
    # Tulis data yang dienkripsi ke dalam file 'text.bin'
    with open('text.txt', 'wb') as f:
        f.write(encrypted)

# Panggil fungsi den() dengan parameter yang sesuai
# Sebagai contoh, kita asumsikan ct adalah ciphertext yang sudah ada
#low adalah nama file yang berisi hex data enc
den1('low', keyimitasi)


